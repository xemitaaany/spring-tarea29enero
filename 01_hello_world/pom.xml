<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jeromejaglale</groupId>
	<artifactId>springwebapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	  
	<properties>
		<java.version>1.8</java.version>
		<spring.version>4.2.0.RELEASE</spring.version>
	</properties>
	 
	<dependencies>
	 
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
	 
		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
	 
		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
	 
	</dependencies>
	 
	<!-- boilerplate code so Maven can generate a .war archive without requiring a web.xml file -->
	<build>
		<finalName>springwebapp</finalName>
	 
		<plugins>
			<plugin>
       				<groupId>org.eclipse.jetty</groupId>
       				<artifactId>jetty-maven-plugin</artifactId>
       				<!--<version>9.3.1-SNAPSHOT</version> -->
       				<version>9.0.5.v20130815</version>
       				<configuration>
       				<httpConnector>
          			<port>9999</port>
        			</httpConnector>
       				</configuration>
  			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
		</plugins>
	</build>
</project>
